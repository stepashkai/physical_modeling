1.Почему используется vector?
Особенность вектора в том, что элементы в нём расположены как в обычном массиве - друг за другом в памяти. 
Поэтому к элементам вектора можно обратиться напрямую по индексу без дополнительных затрат времени. 
Если сравнить со списком, то чтобы получить i-тый элемент - нужно его сначала найти. 
Чтобы его найти - нужно дойти до него через первый или последний элемент, а это дополнительные затраты. 
С деревьями точно такая же проблема. 
Элементы дерева хранятся в отдельных местах памяти и так легко получить какой-то элемент по индексу нельзя,
ведь его сначала нужно найти. 
У нас в векторе хранятся планеты, к которым  приходится постоянно обращаться именно по индексу. 
Поэтому выбор пал на вектор, ведь обращение в нем максимально быстрое, а обращаемся в коде к его элементам очень часто.
2.Про сложность при обращении к элементам вектора.
Так как элементы однозначно индексируются без дополнительного поиска - обращение к элементу занимает O(1).
Вставка элемента в вектор с конца имеет сложность О(n). У нас все планеты вставляются с конца, т.е. push_back.
После удаления элемента из произвольного места требует сдвинуть элементы, которые находятся правее удаленного влево на один. 
Сложность этой операции от О(0) до O(n-1). 
Чем ближе элемент для удаления к началу, тем затратнее это происходит по времени.
Как раз-таки из-за удаления и вот этого сдвига данных и портятся текстуры, если создавать вектор из значений, а не указателей;
сбиваются какие-то указатели при сдвиге элементов.
